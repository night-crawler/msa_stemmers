variables:
  PYLINT: msa_stemmers
  COVERAGE: msa_stemmers
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  IMAGE_VERSION_TAG: $CI_REGISTRY_IMAGE:0.0.14
  BUILD_DEPS: libev-dev

before_script:
  - env
  - docker network connect build-network `cat /proc/self/cgroup | head -n 1 | cut -d '/' -f3`

stages:
  - test
  - build
  - deploy

run-tests:
  image: $DOCKER_PYTHON_TEST_IMAGE
  stage: test
  tags: ["python"]
  script:
    - mkdir -p public
    - apt-get install --no-install-recommends --assume-yes $BUILD_DEPS
    - pip install --no-cache-dir --src /usr/local/src -r requirements/dev.txt
    - pytest --cov=$COVERAGE -s .
    - export SCORE=$(pylint $PYLINT 2>&1 | grep 'Your code has been rated' | cut -d' ' -f7 | cut -d'/' -f1)
    - coverage-badge -o public/coverage.svg
    - anybadge --value=$SCORE --file=public/pylint.svg pylint
  artifacts:
    paths:
      - public/coverage.svg
      - public/pylint.svg

build-image:
  stage: build
  tags: ["docker"]
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --file Dockerfile --network "build-network" -t $IMAGE_TAG -t $IMAGE_VERSION_TAG .
    - docker push $IMAGE_TAG
    - docker push $IMAGE_VERSION_TAG

pages:
  stage: deploy
  artifacts:
    paths:
      - public
  only:
    - master
  script:
    - ls -lah
